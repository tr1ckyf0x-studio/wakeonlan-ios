name: "Wake on LAN"

settings:
  base:
    SWIFT_VERSION: 5.2
    DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
    ENABLE_BITCODE: NO

options:
  deploymentTarget:
    iOS: 11.0

attributes:
  CLASSPREFIX: WO
  ORGANIZATIONNAME: "Владислав Лисянский"

targets:
  Wake on LAN:
    platform: iOS
    type: application
    sources:
      - path: "Wake on LAN"
      - path: "Wake on LAN/R.generated.swift"
        optional: true
    dependencies:
      - carthage: SnapKit
    settings:
      base:
        TARGETED_DEVICE_FAMILY: 1
        DISPLAY_NAME: "Wake on LAN"

        DEVELOPMENT_TEAM: 3HSG7M3SCR
        PRODUCT_BUNDLE_IDENTIFIER: com.tr1ckyf0x.wakeonlan
        CODE_SIGN_IDENTITY: "Apple Development"
        CODE_SIGN_STYLE: Automatic
        PROVISIONING_PROFILE_SPECIFIER: ""
    preBuildScripts:
    - name: "R.Swift"
      script: |
              "$PODS_ROOT/R.swift/rswift" generate "$SRCROOT/Wake on LAN/R.generated.swift"
      inputFiles:
        - $TEMP_DIR/rswift-lastrun
      outputFiles:
        - $SRCROOT/Wake on LAN/R.generated.swift
    - name: "Swiftlint"
      script: |
              if which swiftlint >/dev/null; then
                swiftlint
              else
                echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
              fi
    # postBuildScripts:
    #   - name: "Crashlytics"
    #     script: |
    #             ${PODS_ROOT}/FirebaseCrashlytics/run
    #     inputFiles:
    #       - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}
    #       - $(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)
  WakeOnLanTests:
    type: bundle.unit-test
    platform: iOS
    sources:
      - path: "Wake On LAN Tests"
    dependencies:
      - target: "Wake on LAN"
      - carthage: SnapKit
